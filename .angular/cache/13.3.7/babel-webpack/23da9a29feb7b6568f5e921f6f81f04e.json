{"ast":null,"code":"import * as i3 from '@angular/common';\nimport { DOCUMENT, isPlatformServer, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Optional, Inject, EventEmitter, SecurityContext, PLATFORM_ID, Directive, Input, Output, ElementRef, ChangeDetectorRef, Renderer2, NgZone, forwardRef, Component, ViewEncapsulation, NgModule } from '@angular/core';\nimport * as i1 from '@angular/platform-browser';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { defer, Subscription, fromEvent } from 'rxjs';\nimport { shareReplay, debounceTime } from 'rxjs/operators';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\nimport { __awaiter } from 'tslib';\n\nfunction QuillEditorComponent_ng_container_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 2);\n  }\n}\n\nfunction QuillEditorComponent_ng_container_0_pre_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"pre\", 2);\n  }\n}\n\nfunction QuillEditorComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, QuillEditorComponent_ng_container_0_div_1_Template, 1, 0, \"div\", 1);\n    i0.ɵɵtemplate(2, QuillEditorComponent_ng_container_0_pre_2_Template, 1, 0, \"pre\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.preserve);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.preserve);\n  }\n}\n\nfunction QuillEditorComponent_ng_container_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 2);\n  }\n}\n\nfunction QuillEditorComponent_ng_container_2_pre_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"pre\", 2);\n  }\n}\n\nfunction QuillEditorComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, QuillEditorComponent_ng_container_2_div_1_Template, 1, 0, \"div\", 1);\n    i0.ɵɵtemplate(2, QuillEditorComponent_ng_container_2_pre_2_Template, 1, 0, \"pre\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.preserve);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.preserve);\n  }\n}\n\nconst _c0 = [[[\"\", \"quill-editor-toolbar\", \"\"]]];\nconst _c1 = [\"[quill-editor-toolbar]\"];\n\nfunction QuillViewComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 1);\n  }\n}\n\nfunction QuillViewComponent_pre_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"pre\", 1);\n  }\n}\n\nconst defaultModules = {\n  toolbar: [['bold', 'italic', 'underline', 'strike'], ['blockquote', 'code-block'], [{\n    header: 1\n  }, {\n    header: 2\n  }], [{\n    list: 'ordered'\n  }, {\n    list: 'bullet'\n  }], [{\n    script: 'sub'\n  }, {\n    script: 'super'\n  }], [{\n    indent: '-1'\n  }, {\n    indent: '+1'\n  }], [{\n    direction: 'rtl'\n  }], [{\n    size: ['small', false, 'large', 'huge']\n  }], [{\n    header: [1, 2, 3, 4, 5, 6, false]\n  }], [{\n    color: []\n  }, {\n    background: []\n  }], [{\n    font: []\n  }], [{\n    align: []\n  }], ['clean'], ['link', 'image', 'video'] // link and image, video\n  ]\n};\n\nconst getFormat = (format, configFormat) => {\n  const passedFormat = format || configFormat;\n  return passedFormat || 'html';\n};\n\nconst QUILL_CONFIG_TOKEN = new InjectionToken('config', {\n  providedIn: 'root',\n  factory: () => ({\n    modules: defaultModules\n  })\n});\n\nclass QuillService {\n  constructor(injector, config) {\n    this.config = config;\n    this.quill$ = defer(() => __awaiter(this, void 0, void 0, function* () {\n      var _a, _b;\n\n      if (!this.Quill) {\n        // Quill adds events listeners on import https://github.com/quilljs/quill/blob/develop/core/emitter.js#L8\n        // We'd want to use the unpatched `addEventListener` method to have all event callbacks to be run outside of zone.\n        // We don't know yet if the `zone.js` is used or not, just save the value to restore it back further.\n        const maybePatchedAddEventListener = this.document.addEventListener; // There're 2 types of Angular applications:\n        // 1) zone-full (by default)\n        // 2) zone-less\n        // The developer can avoid importing the `zone.js` package and tells Angular that he/she is responsible for running\n        // the change detection by himself. This is done by \"nooping\" the zone through `CompilerOptions` when bootstrapping\n        // the root module. We fallback to `document.addEventListener` if `__zone_symbol__addEventListener` is not defined,\n        // this means the `zone.js` is not imported.\n        // The `__zone_symbol__addEventListener` is basically a native DOM API, which is not patched by zone.js, thus not even going\n        // through the `zone.js` task lifecycle. You can also access the native DOM API as follows `target[Zone.__symbol__('methodName')]`.\n        // eslint-disable-next-line @typescript-eslint/dot-notation\n\n        this.document.addEventListener = this.document['__zone_symbol__addEventListener'] || this.document.addEventListener;\n        const quillImport = yield import('quill');\n        this.document.addEventListener = maybePatchedAddEventListener;\n        this.Quill = quillImport.default ? quillImport.default : quillImport;\n      } // Only register custom options and modules once\n\n\n      (_a = this.config.customOptions) === null || _a === void 0 ? void 0 : _a.forEach(customOption => {\n        const newCustomOption = this.Quill.import(customOption.import);\n        newCustomOption.whitelist = customOption.whitelist;\n        this.Quill.register(newCustomOption, true, this.config.suppressGlobalRegisterWarning);\n      });\n      (_b = this.config.customModules) === null || _b === void 0 ? void 0 : _b.forEach(({\n        implementation,\n        path\n      }) => {\n        this.Quill.register(path, implementation, this.config.suppressGlobalRegisterWarning);\n      });\n      return this.Quill;\n    })).pipe(shareReplay({\n      bufferSize: 1,\n      refCount: true\n    }));\n    this.document = injector.get(DOCUMENT);\n\n    if (!this.config) {\n      this.config = {\n        modules: defaultModules\n      };\n    }\n  }\n\n  getQuill() {\n    return this.quill$;\n  }\n\n}\n\nQuillService.ɵfac = function QuillService_Factory(t) {\n  return new (t || QuillService)(i0.ɵɵinject(i0.Injector), i0.ɵɵinject(QUILL_CONFIG_TOKEN, 8));\n};\n\nQuillService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: QuillService,\n  factory: QuillService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(QuillService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i0.Injector\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [QUILL_CONFIG_TOKEN]\n      }]\n    }];\n  }, null);\n})(); // eslint-disable-next-line @angular-eslint/directive-class-suffix\n\n\nclass QuillEditorBase {\n  constructor(injector, elementRef, cd, domSanitizer, platformId, renderer, zone, service) {\n    this.elementRef = elementRef;\n    this.cd = cd;\n    this.domSanitizer = domSanitizer;\n    this.platformId = platformId;\n    this.renderer = renderer;\n    this.zone = zone;\n    this.service = service;\n    this.required = false;\n    this.customToolbarPosition = 'top';\n    this.styles = null;\n    this.strict = true;\n    this.customOptions = [];\n    this.customModules = [];\n    this.preserveWhitespace = false;\n    this.trimOnValidation = false;\n    this.compareValues = false;\n    this.filterNull = false;\n    /*\n    https://github.com/KillerCodeMonkey/ngx-quill/issues/1257 - fix null value set\n           provide default empty value\n    by default null\n           e.g. defaultEmptyValue=\"\" - empty string\n           <quill-editor\n      defaultEmptyValue=\"\"\n      formControlName=\"message\"\n    ></quill-editor>\n    */\n\n    this.defaultEmptyValue = null;\n    this.onEditorCreated = new EventEmitter();\n    this.onEditorChanged = new EventEmitter();\n    this.onContentChanged = new EventEmitter();\n    this.onSelectionChanged = new EventEmitter();\n    this.onFocus = new EventEmitter();\n    this.onBlur = new EventEmitter();\n    this.disabled = false; // used to store initial value before ViewInit\n\n    this.preserve = false;\n    this.toolbarPosition = 'top';\n    this.subscription = null;\n    this.quillSubscription = null;\n\n    this.valueGetter = (quillEditor, editorElement) => {\n      let html = editorElement.querySelector('.ql-editor').innerHTML;\n\n      if (html === '<p><br></p>' || html === '<div><br></div>') {\n        html = this.defaultEmptyValue;\n      }\n\n      let modelValue = html;\n      const format = getFormat(this.format, this.service.config.format);\n\n      if (format === 'text') {\n        modelValue = quillEditor.getText();\n      } else if (format === 'object') {\n        modelValue = quillEditor.getContents();\n      } else if (format === 'json') {\n        try {\n          modelValue = JSON.stringify(quillEditor.getContents());\n        } catch (e) {\n          modelValue = quillEditor.getText();\n        }\n      }\n\n      return modelValue;\n    };\n\n    this.valueSetter = (quillEditor, value) => {\n      const format = getFormat(this.format, this.service.config.format);\n\n      if (format === 'html') {\n        const sanitize = [true, false].includes(this.sanitize) ? this.sanitize : this.service.config.sanitize || false;\n\n        if (sanitize) {\n          value = this.domSanitizer.sanitize(SecurityContext.HTML, value);\n        }\n\n        return quillEditor.clipboard.convert(value);\n      } else if (format === 'json') {\n        try {\n          return JSON.parse(value);\n        } catch (e) {\n          return [{\n            insert: value\n          }];\n        }\n      }\n\n      return value;\n    };\n\n    this.selectionChangeHandler = (range, oldRange, source) => {\n      const shouldTriggerOnModelTouched = !range && !!this.onModelTouched; // only emit changes when there's any listener\n\n      if (!this.onBlur.observers.length && !this.onFocus.observers.length && !this.onSelectionChanged.observers.length && !shouldTriggerOnModelTouched) {\n        return;\n      }\n\n      this.zone.run(() => {\n        if (range === null) {\n          this.onBlur.emit({\n            editor: this.quillEditor,\n            source\n          });\n        } else if (oldRange === null) {\n          this.onFocus.emit({\n            editor: this.quillEditor,\n            source\n          });\n        }\n\n        this.onSelectionChanged.emit({\n          editor: this.quillEditor,\n          oldRange,\n          range,\n          source\n        });\n\n        if (shouldTriggerOnModelTouched) {\n          this.onModelTouched();\n        }\n\n        this.cd.markForCheck();\n      });\n    };\n\n    this.textChangeHandler = (delta, oldDelta, source) => {\n      // only emit changes emitted by user interactions\n      const text = this.quillEditor.getText();\n      const content = this.quillEditor.getContents();\n      let html = this.editorElem.querySelector('.ql-editor').innerHTML;\n\n      if (html === '<p><br></p>' || html === '<div><br></div>') {\n        html = this.defaultEmptyValue;\n      }\n\n      const trackChanges = this.trackChanges || this.service.config.trackChanges;\n      const shouldTriggerOnModelChange = (source === 'user' || trackChanges && trackChanges === 'all') && !!this.onModelChange; // only emit changes when there's any listener\n\n      if (!this.onContentChanged.observers.length && !shouldTriggerOnModelChange) {\n        return;\n      }\n\n      this.zone.run(() => {\n        if (shouldTriggerOnModelChange) {\n          this.onModelChange(this.valueGetter(this.quillEditor, this.editorElem));\n        }\n\n        this.onContentChanged.emit({\n          content,\n          delta,\n          editor: this.quillEditor,\n          html,\n          oldDelta,\n          source,\n          text\n        });\n        this.cd.markForCheck();\n      });\n    }; // eslint-disable-next-line max-len\n\n\n    this.editorChangeHandler = (event, current, old, source) => {\n      // only emit changes when there's any listener\n      if (!this.onEditorChanged.observers.length) {\n        return;\n      } // only emit changes emitted by user interactions\n\n\n      if (event === 'text-change') {\n        const text = this.quillEditor.getText();\n        const content = this.quillEditor.getContents();\n        let html = this.editorElem.querySelector('.ql-editor').innerHTML;\n\n        if (html === '<p><br></p>' || html === '<div><br></div>') {\n          html = this.defaultEmptyValue;\n        }\n\n        this.zone.run(() => {\n          this.onEditorChanged.emit({\n            content,\n            delta: current,\n            editor: this.quillEditor,\n            event,\n            html,\n            oldDelta: old,\n            source,\n            text\n          });\n          this.cd.markForCheck();\n        });\n      } else {\n        this.zone.run(() => {\n          this.onEditorChanged.emit({\n            editor: this.quillEditor,\n            event,\n            oldRange: old,\n            range: current,\n            source\n          });\n          this.cd.markForCheck();\n        });\n      }\n    };\n\n    this.document = injector.get(DOCUMENT);\n  }\n\n  static normalizeClassNames(classes) {\n    const classList = classes.trim().split(' ');\n    return classList.reduce((prev, cur) => {\n      const trimmed = cur.trim();\n\n      if (trimmed) {\n        prev.push(trimmed);\n      }\n\n      return prev;\n    }, []);\n  }\n\n  ngOnInit() {\n    this.preserve = this.preserveWhitespace;\n    this.toolbarPosition = this.customToolbarPosition;\n  }\n\n  ngAfterViewInit() {\n    if (isPlatformServer(this.platformId)) {\n      return;\n    } // The `quill-editor` component might be destroyed before the `quill` chunk is loaded and its code is executed\n    // this will lead to runtime exceptions, since the code will be executed on DOM nodes that don't exist within the tree.\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n\n\n    this.quillSubscription = this.service.getQuill().subscribe(Quill => {\n      this.editorElem = this.elementRef.nativeElement.querySelector('[quill-editor-element]');\n      const toolbarElem = this.elementRef.nativeElement.querySelector('[quill-editor-toolbar]');\n      const modules = Object.assign({}, this.modules || this.service.config.modules);\n\n      if (toolbarElem) {\n        modules.toolbar = toolbarElem;\n      } else if (modules.toolbar === undefined) {\n        modules.toolbar = defaultModules.toolbar;\n      }\n\n      let placeholder = this.placeholder !== undefined ? this.placeholder : this.service.config.placeholder;\n\n      if (placeholder === undefined) {\n        placeholder = 'Insert text here ...';\n      }\n\n      if (this.styles) {\n        Object.keys(this.styles).forEach(key => {\n          this.renderer.setStyle(this.editorElem, key, this.styles[key]);\n        });\n      }\n\n      if (this.classes) {\n        this.addClasses(this.classes);\n      }\n\n      this.customOptions.forEach(customOption => {\n        const newCustomOption = Quill.import(customOption.import);\n        newCustomOption.whitelist = customOption.whitelist;\n        Quill.register(newCustomOption, true);\n      });\n      this.customModules.forEach(({\n        implementation,\n        path\n      }) => {\n        Quill.register(path, implementation);\n      });\n      let bounds = this.bounds && this.bounds === 'self' ? this.editorElem : this.bounds;\n\n      if (!bounds) {\n        bounds = this.service.config.bounds ? this.service.config.bounds : this.document.body;\n      }\n\n      let debug = this.debug;\n\n      if (!debug && debug !== false && this.service.config.debug) {\n        debug = this.service.config.debug;\n      }\n\n      let readOnly = this.readOnly;\n\n      if (!readOnly && this.readOnly !== false) {\n        readOnly = this.service.config.readOnly !== undefined ? this.service.config.readOnly : false;\n      }\n\n      let defaultEmptyValue = this.defaultEmptyValue;\n\n      if (this.service.config.hasOwnProperty('defaultEmptyValue')) {\n        defaultEmptyValue = this.service.config.defaultEmptyValue;\n      }\n\n      let scrollingContainer = this.scrollingContainer;\n\n      if (!scrollingContainer && this.scrollingContainer !== null) {\n        scrollingContainer = this.service.config.scrollingContainer === null || this.service.config.scrollingContainer ? this.service.config.scrollingContainer : null;\n      }\n\n      let formats = this.formats;\n\n      if (!formats && formats === undefined) {\n        formats = this.service.config.formats ? [...this.service.config.formats] : this.service.config.formats === null ? null : undefined;\n      }\n\n      this.zone.runOutsideAngular(() => {\n        var _a, _b, _c;\n\n        this.quillEditor = new Quill(this.editorElem, {\n          bounds,\n          debug: debug,\n          formats: formats,\n          modules,\n          placeholder,\n          readOnly,\n          defaultEmptyValue,\n          scrollingContainer: scrollingContainer,\n          strict: this.strict,\n          theme: this.theme || (this.service.config.theme ? this.service.config.theme : 'snow')\n        }); // Set optional link placeholder, Quill has no native API for it so using workaround\n\n        if (this.linkPlaceholder) {\n          const tooltip = (_b = (_a = this.quillEditor) === null || _a === void 0 ? void 0 : _a.theme) === null || _b === void 0 ? void 0 : _b.tooltip;\n          const input = (_c = tooltip === null || tooltip === void 0 ? void 0 : tooltip.root) === null || _c === void 0 ? void 0 : _c.querySelector('input[data-link]');\n\n          if (input === null || input === void 0 ? void 0 : input.dataset) {\n            input.dataset.link = this.linkPlaceholder;\n          }\n        }\n      });\n\n      if (this.content) {\n        const format = getFormat(this.format, this.service.config.format);\n\n        if (format === 'text') {\n          this.quillEditor.setText(this.content, 'silent');\n        } else {\n          const newValue = this.valueSetter(this.quillEditor, this.content);\n          this.quillEditor.setContents(newValue, 'silent');\n        }\n\n        this.quillEditor.getModule('history').clear();\n      } // initialize disabled status based on this.disabled as default value\n\n\n      this.setDisabledState();\n      this.addQuillEventListeners(); // The `requestAnimationFrame` triggers change detection. There's no sense to invoke the `requestAnimationFrame` if anyone is\n      // listening to the `onEditorCreated` event inside the template, for instance `<quill-view (onEditorCreated)=\"...\">`.\n\n      if (!this.onEditorCreated.observers.length && !this.onValidatorChanged) {\n        return;\n      } // The `requestAnimationFrame` will trigger change detection and `onEditorCreated` will also call `markDirty()`\n      // internally, since Angular wraps template event listeners into `listener` instruction. We're using the `requestAnimationFrame`\n      // to prevent the frame drop and avoid `ExpressionChangedAfterItHasBeenCheckedError` error.\n\n\n      requestAnimationFrame(() => {\n        if (this.onValidatorChanged) {\n          this.onValidatorChanged();\n        }\n\n        this.onEditorCreated.emit(this.quillEditor);\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    var _a;\n\n    this.dispose();\n    (_a = this.quillSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n    this.quillSubscription = null;\n  }\n\n  ngOnChanges(changes) {\n    if (!this.quillEditor) {\n      return;\n    }\n    /* eslint-disable @typescript-eslint/dot-notation */\n\n\n    if (changes.readOnly) {\n      this.quillEditor.enable(!changes.readOnly.currentValue);\n    }\n\n    if (changes.placeholder) {\n      this.quillEditor.root.dataset.placeholder = changes.placeholder.currentValue;\n    }\n\n    if (changes.defaultEmptyValue) {\n      this.quillEditor.root.dataset.defaultEmptyValue = changes.defaultEmptyValue.currentValue;\n    }\n\n    if (changes.styles) {\n      const currentStyling = changes.styles.currentValue;\n      const previousStyling = changes.styles.previousValue;\n\n      if (previousStyling) {\n        Object.keys(previousStyling).forEach(key => {\n          this.renderer.removeStyle(this.editorElem, key);\n        });\n      }\n\n      if (currentStyling) {\n        Object.keys(currentStyling).forEach(key => {\n          this.renderer.setStyle(this.editorElem, key, this.styles[key]);\n        });\n      }\n    }\n\n    if (changes.classes) {\n      const currentClasses = changes.classes.currentValue;\n      const previousClasses = changes.classes.previousValue;\n\n      if (previousClasses) {\n        this.removeClasses(previousClasses);\n      }\n\n      if (currentClasses) {\n        this.addClasses(currentClasses);\n      }\n    } // We'd want to re-apply event listeners if the `debounceTime` binding changes to apply the\n    // `debounceTime` operator or vice-versa remove it.\n\n\n    if (changes.debounceTime) {\n      this.addQuillEventListeners();\n    }\n    /* eslint-enable @typescript-eslint/dot-notation */\n\n  }\n\n  addClasses(classList) {\n    QuillEditorBase.normalizeClassNames(classList).forEach(c => {\n      this.renderer.addClass(this.editorElem, c);\n    });\n  }\n\n  removeClasses(classList) {\n    QuillEditorBase.normalizeClassNames(classList).forEach(c => {\n      this.renderer.removeClass(this.editorElem, c);\n    });\n  }\n\n  writeValue(currentValue) {\n    // optional fix for https://github.com/angular/angular/issues/14988\n    if (this.filterNull && currentValue === null) {\n      return;\n    }\n\n    this.content = currentValue;\n\n    if (!this.quillEditor) {\n      return;\n    }\n\n    const format = getFormat(this.format, this.service.config.format);\n    const newValue = this.valueSetter(this.quillEditor, currentValue);\n\n    if (this.compareValues) {\n      const currentEditorValue = this.quillEditor.getContents();\n\n      if (JSON.stringify(currentEditorValue) === JSON.stringify(newValue)) {\n        return;\n      }\n    }\n\n    if (currentValue) {\n      if (format === 'text') {\n        this.quillEditor.setText(currentValue);\n      } else {\n        this.quillEditor.setContents(newValue);\n      }\n\n      return;\n    }\n\n    this.quillEditor.setText('');\n  }\n\n  setDisabledState(isDisabled = this.disabled) {\n    // store initial value to set appropriate disabled status after ViewInit\n    this.disabled = isDisabled;\n\n    if (this.quillEditor) {\n      if (isDisabled) {\n        this.quillEditor.disable();\n        this.renderer.setAttribute(this.elementRef.nativeElement, 'disabled', 'disabled');\n      } else {\n        if (!this.readOnly) {\n          this.quillEditor.enable();\n        }\n\n        this.renderer.removeAttribute(this.elementRef.nativeElement, 'disabled');\n      }\n    }\n  }\n\n  registerOnChange(fn) {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onModelTouched = fn;\n  }\n\n  registerOnValidatorChange(fn) {\n    this.onValidatorChanged = fn;\n  }\n\n  validate() {\n    if (!this.quillEditor) {\n      return null;\n    }\n\n    const err = {};\n    let valid = true;\n    const text = this.quillEditor.getText(); // trim text if wanted + handle special case that an empty editor contains a new line\n\n    const textLength = this.trimOnValidation ? text.trim().length : text.length === 1 && text.trim().length === 0 ? 0 : text.length - 1;\n    const deltaOperations = this.quillEditor.getContents().ops;\n    const onlyEmptyOperation = deltaOperations && deltaOperations.length === 1 && ['\\n', ''].includes(deltaOperations[0].insert);\n\n    if (this.minLength && textLength && textLength < this.minLength) {\n      err.minLengthError = {\n        given: textLength,\n        minLength: this.minLength\n      };\n      valid = false;\n    }\n\n    if (this.maxLength && textLength > this.maxLength) {\n      err.maxLengthError = {\n        given: textLength,\n        maxLength: this.maxLength\n      };\n      valid = false;\n    }\n\n    if (this.required && !textLength && onlyEmptyOperation) {\n      err.requiredError = {\n        empty: true\n      };\n      valid = false;\n    }\n\n    return valid ? null : err;\n  }\n\n  addQuillEventListeners() {\n    this.dispose(); // We have to enter the `<root>` zone when adding event listeners, so `debounceTime` will spawn the\n    // `AsyncAction` there w/o triggering change detections. We still re-enter the Angular's zone through\n    // `zone.run` when we emit an event to the parent component.\n\n    this.zone.runOutsideAngular(() => {\n      this.subscription = new Subscription();\n      this.subscription.add( // mark model as touched if editor lost focus\n      fromEvent(this.quillEditor, 'selection-change').subscribe(([range, oldRange, source]) => {\n        this.selectionChangeHandler(range, oldRange, source);\n      })); // The `fromEvent` supports passing JQuery-style event targets, the editor has `on` and `off` methods which\n      // will be invoked upon subscription and teardown.\n\n      let textChange$ = fromEvent(this.quillEditor, 'text-change');\n      let editorChange$ = fromEvent(this.quillEditor, 'editor-change');\n\n      if (typeof this.debounceTime === 'number') {\n        textChange$ = textChange$.pipe(debounceTime(this.debounceTime));\n        editorChange$ = editorChange$.pipe(debounceTime(this.debounceTime));\n      }\n\n      this.subscription.add( // update model if text changes\n      textChange$.subscribe(([delta, oldDelta, source]) => {\n        this.textChangeHandler(delta, oldDelta, source);\n      }));\n      this.subscription.add( // triggered if selection or text changed\n      editorChange$.subscribe(([event, current, old, source]) => {\n        this.editorChangeHandler(event, current, old, source);\n      }));\n    });\n  }\n\n  dispose() {\n    if (this.subscription !== null) {\n      this.subscription.unsubscribe();\n      this.subscription = null;\n    }\n  }\n\n}\n\nQuillEditorBase.ɵfac = function QuillEditorBase_Factory(t) {\n  return new (t || QuillEditorBase)(i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.DomSanitizer), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(QuillService));\n};\n\nQuillEditorBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: QuillEditorBase,\n  inputs: {\n    format: \"format\",\n    theme: \"theme\",\n    modules: \"modules\",\n    debug: \"debug\",\n    readOnly: \"readOnly\",\n    placeholder: \"placeholder\",\n    maxLength: \"maxLength\",\n    minLength: \"minLength\",\n    required: \"required\",\n    formats: \"formats\",\n    customToolbarPosition: \"customToolbarPosition\",\n    sanitize: \"sanitize\",\n    styles: \"styles\",\n    strict: \"strict\",\n    scrollingContainer: \"scrollingContainer\",\n    bounds: \"bounds\",\n    customOptions: \"customOptions\",\n    customModules: \"customModules\",\n    trackChanges: \"trackChanges\",\n    preserveWhitespace: \"preserveWhitespace\",\n    classes: \"classes\",\n    trimOnValidation: \"trimOnValidation\",\n    linkPlaceholder: \"linkPlaceholder\",\n    compareValues: \"compareValues\",\n    filterNull: \"filterNull\",\n    debounceTime: \"debounceTime\",\n    defaultEmptyValue: \"defaultEmptyValue\",\n    valueGetter: \"valueGetter\",\n    valueSetter: \"valueSetter\"\n  },\n  outputs: {\n    onEditorCreated: \"onEditorCreated\",\n    onEditorChanged: \"onEditorChanged\",\n    onContentChanged: \"onContentChanged\",\n    onSelectionChanged: \"onSelectionChanged\",\n    onFocus: \"onFocus\",\n    onBlur: \"onBlur\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(QuillEditorBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.Injector\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1.DomSanitizer\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.NgZone\n    }, {\n      type: QuillService\n    }];\n  }, {\n    format: [{\n      type: Input\n    }],\n    theme: [{\n      type: Input\n    }],\n    modules: [{\n      type: Input\n    }],\n    debug: [{\n      type: Input\n    }],\n    readOnly: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    maxLength: [{\n      type: Input\n    }],\n    minLength: [{\n      type: Input\n    }],\n    required: [{\n      type: Input\n    }],\n    formats: [{\n      type: Input\n    }],\n    customToolbarPosition: [{\n      type: Input\n    }],\n    sanitize: [{\n      type: Input\n    }],\n    styles: [{\n      type: Input\n    }],\n    strict: [{\n      type: Input\n    }],\n    scrollingContainer: [{\n      type: Input\n    }],\n    bounds: [{\n      type: Input\n    }],\n    customOptions: [{\n      type: Input\n    }],\n    customModules: [{\n      type: Input\n    }],\n    trackChanges: [{\n      type: Input\n    }],\n    preserveWhitespace: [{\n      type: Input\n    }],\n    classes: [{\n      type: Input\n    }],\n    trimOnValidation: [{\n      type: Input\n    }],\n    linkPlaceholder: [{\n      type: Input\n    }],\n    compareValues: [{\n      type: Input\n    }],\n    filterNull: [{\n      type: Input\n    }],\n    debounceTime: [{\n      type: Input\n    }],\n    defaultEmptyValue: [{\n      type: Input\n    }],\n    onEditorCreated: [{\n      type: Output\n    }],\n    onEditorChanged: [{\n      type: Output\n    }],\n    onContentChanged: [{\n      type: Output\n    }],\n    onSelectionChanged: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output\n    }],\n    onBlur: [{\n      type: Output\n    }],\n    valueGetter: [{\n      type: Input\n    }],\n    valueSetter: [{\n      type: Input\n    }]\n  });\n})();\n\nclass QuillEditorComponent extends QuillEditorBase {\n  constructor(injector, elementRef, cd, domSanitizer, platformId, renderer, zone, service) {\n    super(injector, elementRef, cd, domSanitizer, platformId, renderer, zone, service);\n  }\n\n}\n\nQuillEditorComponent.ɵfac = function QuillEditorComponent_Factory(t) {\n  return new (t || QuillEditorComponent)(i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(ElementRef), i0.ɵɵdirectiveInject(ChangeDetectorRef), i0.ɵɵdirectiveInject(DomSanitizer), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(Renderer2), i0.ɵɵdirectiveInject(NgZone), i0.ɵɵdirectiveInject(QuillService));\n};\n\nQuillEditorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: QuillEditorComponent,\n  selectors: [[\"quill-editor\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    multi: true,\n    provide: NG_VALUE_ACCESSOR,\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    useExisting: forwardRef(() => QuillEditorComponent)\n  }, {\n    multi: true,\n    provide: NG_VALIDATORS,\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    useExisting: forwardRef(() => QuillEditorComponent)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c1,\n  decls: 3,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [\"quill-editor-element\", \"\", 4, \"ngIf\"], [\"quill-editor-element\", \"\"]],\n  template: function QuillEditorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef(_c0);\n      i0.ɵɵtemplate(0, QuillEditorComponent_ng_container_0_Template, 3, 2, \"ng-container\", 0);\n      i0.ɵɵprojection(1);\n      i0.ɵɵtemplate(2, QuillEditorComponent_ng_container_2_Template, 3, 2, \"ng-container\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.toolbarPosition !== \"top\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.toolbarPosition === \"top\");\n    }\n  },\n  directives: [i3.NgIf],\n  styles: [\":host{display:inline-block}\\n\"],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(QuillEditorComponent, [{\n    type: Component,\n    args: [{\n      encapsulation: ViewEncapsulation.None,\n      providers: [{\n        multi: true,\n        provide: NG_VALUE_ACCESSOR,\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        useExisting: forwardRef(() => QuillEditorComponent)\n      }, {\n        multi: true,\n        provide: NG_VALIDATORS,\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        useExisting: forwardRef(() => QuillEditorComponent)\n      }],\n      selector: 'quill-editor',\n      template: `\n  <ng-container *ngIf=\"toolbarPosition !== 'top'\">\n    <div quill-editor-element *ngIf=\"!preserve\"></div>\n    <pre quill-editor-element *ngIf=\"preserve\"></pre>\n  </ng-container>\n  <ng-content select=\"[quill-editor-toolbar]\"></ng-content>\n  <ng-container *ngIf=\"toolbarPosition === 'top'\">\n    <div quill-editor-element *ngIf=\"!preserve\"></div>\n    <pre quill-editor-element *ngIf=\"preserve\"></pre>\n  </ng-container>\n`,\n      styles: [`\n    :host {\n      display: inline-block;\n    }\n    `]\n    }]\n  }], function () {\n    return [{\n      type: i0.Injector\n    }, {\n      type: i0.ElementRef,\n      decorators: [{\n        type: Inject,\n        args: [ElementRef]\n      }]\n    }, {\n      type: i0.ChangeDetectorRef,\n      decorators: [{\n        type: Inject,\n        args: [ChangeDetectorRef]\n      }]\n    }, {\n      type: i1.DomSanitizer,\n      decorators: [{\n        type: Inject,\n        args: [DomSanitizer]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: i0.Renderer2,\n      decorators: [{\n        type: Inject,\n        args: [Renderer2]\n      }]\n    }, {\n      type: i0.NgZone,\n      decorators: [{\n        type: Inject,\n        args: [NgZone]\n      }]\n    }, {\n      type: QuillService,\n      decorators: [{\n        type: Inject,\n        args: [QuillService]\n      }]\n    }];\n  }, null);\n})();\n\nclass QuillViewHTMLComponent {\n  constructor(sanitizer, service) {\n    this.sanitizer = sanitizer;\n    this.service = service;\n    this.content = '';\n    this.innerHTML = '';\n    this.themeClass = 'ql-snow';\n  }\n\n  ngOnChanges(changes) {\n    if (changes.theme) {\n      const theme = changes.theme.currentValue || (this.service.config.theme ? this.service.config.theme : 'snow');\n      this.themeClass = `ql-${theme} ngx-quill-view-html`;\n    } else if (!this.theme) {\n      const theme = this.service.config.theme ? this.service.config.theme : 'snow';\n      this.themeClass = `ql-${theme} ngx-quill-view-html`;\n    }\n\n    if (changes.content) {\n      const content = changes.content.currentValue;\n      const sanitize = [true, false].includes(this.sanitize) ? this.sanitize : this.service.config.sanitize || false;\n      this.innerHTML = sanitize ? content : this.sanitizer.bypassSecurityTrustHtml(content);\n    }\n  }\n\n}\n\nQuillViewHTMLComponent.ɵfac = function QuillViewHTMLComponent_Factory(t) {\n  return new (t || QuillViewHTMLComponent)(i0.ɵɵdirectiveInject(DomSanitizer), i0.ɵɵdirectiveInject(QuillService));\n};\n\nQuillViewHTMLComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: QuillViewHTMLComponent,\n  selectors: [[\"quill-view-html\"]],\n  inputs: {\n    content: \"content\",\n    theme: \"theme\",\n    sanitize: \"sanitize\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 2,\n  consts: [[1, \"ql-container\", 3, \"ngClass\"], [1, \"ql-editor\", 3, \"innerHTML\"]],\n  template: function QuillViewHTMLComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"div\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", ctx.themeClass);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"innerHTML\", ctx.innerHTML, i0.ɵɵsanitizeHtml);\n    }\n  },\n  directives: [i3.NgClass],\n  styles: [\".ql-container.ngx-quill-view-html{border:0}\\n\"],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(QuillViewHTMLComponent, [{\n    type: Component,\n    args: [{\n      encapsulation: ViewEncapsulation.None,\n      selector: 'quill-view-html',\n      styles: [`\n.ql-container.ngx-quill-view-html {\n  border: 0;\n}\n`],\n      template: `\n  <div class=\"ql-container\" [ngClass]=\"themeClass\">\n    <div class=\"ql-editor\" [innerHTML]=\"innerHTML\">\n    </div>\n  </div>\n`\n    }]\n  }], function () {\n    return [{\n      type: i1.DomSanitizer,\n      decorators: [{\n        type: Inject,\n        args: [DomSanitizer]\n      }]\n    }, {\n      type: QuillService\n    }];\n  }, {\n    content: [{\n      type: Input\n    }],\n    theme: [{\n      type: Input\n    }],\n    sanitize: [{\n      type: Input\n    }]\n  });\n})();\n\nclass QuillViewComponent {\n  constructor(elementRef, renderer, zone, service, domSanitizer, platformId) {\n    this.elementRef = elementRef;\n    this.renderer = renderer;\n    this.zone = zone;\n    this.service = service;\n    this.domSanitizer = domSanitizer;\n    this.platformId = platformId;\n    this.strict = true;\n    this.customModules = [];\n    this.customOptions = [];\n    this.preserveWhitespace = false;\n    this.onEditorCreated = new EventEmitter();\n    this.preserve = false;\n    this.quillSubscription = null;\n\n    this.valueSetter = (quillEditor, value) => {\n      const format = getFormat(this.format, this.service.config.format);\n      let content = value;\n\n      if (format === 'text') {\n        quillEditor.setText(content);\n      } else {\n        if (format === 'html') {\n          const sanitize = [true, false].includes(this.sanitize) ? this.sanitize : this.service.config.sanitize || false;\n\n          if (sanitize) {\n            value = this.domSanitizer.sanitize(SecurityContext.HTML, value);\n          }\n\n          content = quillEditor.clipboard.convert(value);\n        } else if (format === 'json') {\n          try {\n            content = JSON.parse(value);\n          } catch (e) {\n            content = [{\n              insert: value\n            }];\n          }\n        }\n\n        quillEditor.setContents(content);\n      }\n    };\n  }\n\n  ngOnInit() {\n    this.preserve = this.preserveWhitespace;\n  }\n\n  ngOnChanges(changes) {\n    if (!this.quillEditor) {\n      return;\n    }\n\n    if (changes.content) {\n      this.valueSetter(this.quillEditor, changes.content.currentValue);\n    }\n  }\n\n  ngAfterViewInit() {\n    if (isPlatformServer(this.platformId)) {\n      return;\n    } // eslint-disable-next-line @typescript-eslint/naming-convention\n\n\n    this.quillSubscription = this.service.getQuill().subscribe(Quill => {\n      const modules = Object.assign({}, this.modules || this.service.config.modules);\n      modules.toolbar = false;\n      this.customOptions.forEach(customOption => {\n        const newCustomOption = Quill.import(customOption.import);\n        newCustomOption.whitelist = customOption.whitelist;\n        Quill.register(newCustomOption, true);\n      });\n      this.customModules.forEach(({\n        implementation,\n        path\n      }) => {\n        Quill.register(path, implementation);\n      });\n      let debug = this.debug;\n\n      if (!debug && debug !== false && this.service.config.debug) {\n        debug = this.service.config.debug;\n      }\n\n      let formats = this.formats;\n\n      if (!formats && formats === undefined) {\n        formats = this.service.config.formats ? Object.assign({}, this.service.config.formats) : this.service.config.formats === null ? null : undefined;\n      }\n\n      const theme = this.theme || (this.service.config.theme ? this.service.config.theme : 'snow');\n      this.editorElem = this.elementRef.nativeElement.querySelector('[quill-view-element]');\n      this.zone.runOutsideAngular(() => {\n        this.quillEditor = new Quill(this.editorElem, {\n          debug: debug,\n          formats: formats,\n          modules,\n          readOnly: true,\n          strict: this.strict,\n          theme\n        });\n      });\n      this.renderer.addClass(this.editorElem, 'ngx-quill-view');\n\n      if (this.content) {\n        this.valueSetter(this.quillEditor, this.content);\n      } // The `requestAnimationFrame` triggers change detection. There's no sense to invoke the `requestAnimationFrame` if anyone is\n      // listening to the `onEditorCreated` event inside the template, for instance `<quill-view (onEditorCreated)=\"...\">`.\n\n\n      if (!this.onEditorCreated.observers.length) {\n        return;\n      } // The `requestAnimationFrame` will trigger change detection and `onEditorCreated` will also call `markDirty()`\n      // internally, since Angular wraps template event listeners into `listener` instruction. We're using the `requestAnimationFrame`\n      // to prevent the frame drop and avoid `ExpressionChangedAfterItHasBeenCheckedError` error.\n\n\n      requestAnimationFrame(() => {\n        this.onEditorCreated.emit(this.quillEditor);\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    var _a;\n\n    (_a = this.quillSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n    this.quillSubscription = null;\n  }\n\n}\n\nQuillViewComponent.ɵfac = function QuillViewComponent_Factory(t) {\n  return new (t || QuillViewComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(QuillService), i0.ɵɵdirectiveInject(i1.DomSanitizer), i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n\nQuillViewComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: QuillViewComponent,\n  selectors: [[\"quill-view\"]],\n  inputs: {\n    format: \"format\",\n    theme: \"theme\",\n    modules: \"modules\",\n    debug: \"debug\",\n    formats: \"formats\",\n    sanitize: \"sanitize\",\n    strict: \"strict\",\n    content: \"content\",\n    customModules: \"customModules\",\n    customOptions: \"customOptions\",\n    preserveWhitespace: \"preserveWhitespace\"\n  },\n  outputs: {\n    onEditorCreated: \"onEditorCreated\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 2,\n  consts: [[\"quill-view-element\", \"\", 4, \"ngIf\"], [\"quill-view-element\", \"\"]],\n  template: function QuillViewComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, QuillViewComponent_div_0_Template, 1, 0, \"div\", 0);\n      i0.ɵɵtemplate(1, QuillViewComponent_pre_1_Template, 1, 0, \"pre\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !ctx.preserve);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.preserve);\n    }\n  },\n  directives: [i3.NgIf],\n  styles: [\".ql-container.ngx-quill-view{border:0}\\n\"],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(QuillViewComponent, [{\n    type: Component,\n    args: [{\n      encapsulation: ViewEncapsulation.None,\n      selector: 'quill-view',\n      styles: [`\n.ql-container.ngx-quill-view {\n  border: 0;\n}\n`],\n      template: `\n<div quill-view-element *ngIf=\"!preserve\"></div>\n<pre quill-view-element *ngIf=\"preserve\"></pre>\n`\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.NgZone\n    }, {\n      type: QuillService\n    }, {\n      type: i1.DomSanitizer\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    format: [{\n      type: Input\n    }],\n    theme: [{\n      type: Input\n    }],\n    modules: [{\n      type: Input\n    }],\n    debug: [{\n      type: Input\n    }],\n    formats: [{\n      type: Input\n    }],\n    sanitize: [{\n      type: Input\n    }],\n    strict: [{\n      type: Input\n    }],\n    content: [{\n      type: Input\n    }],\n    customModules: [{\n      type: Input\n    }],\n    customOptions: [{\n      type: Input\n    }],\n    preserveWhitespace: [{\n      type: Input\n    }],\n    onEditorCreated: [{\n      type: Output\n    }]\n  });\n})();\n\nclass QuillModule {\n  static forRoot(config) {\n    return {\n      ngModule: QuillModule,\n      providers: [{\n        provide: QUILL_CONFIG_TOKEN,\n        useValue: config\n      }]\n    };\n  }\n\n}\n\nQuillModule.ɵfac = function QuillModule_Factory(t) {\n  return new (t || QuillModule)();\n};\n\nQuillModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: QuillModule\n});\nQuillModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(QuillModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent],\n      exports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent],\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n/*\n * Public API Surface of ngx-quill\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { QUILL_CONFIG_TOKEN, QuillEditorBase, QuillEditorComponent, QuillModule, QuillService, QuillViewComponent, QuillViewHTMLComponent, defaultModules };","map":{"version":3,"names":["i3","DOCUMENT","isPlatformServer","CommonModule","i0","InjectionToken","Injectable","Optional","Inject","EventEmitter","SecurityContext","PLATFORM_ID","Directive","Input","Output","ElementRef","ChangeDetectorRef","Renderer2","NgZone","forwardRef","Component","ViewEncapsulation","NgModule","i1","DomSanitizer","defer","Subscription","fromEvent","shareReplay","debounceTime","NG_VALUE_ACCESSOR","NG_VALIDATORS","__awaiter","defaultModules","toolbar","header","list","script","indent","direction","size","color","background","font","align","getFormat","format","configFormat","passedFormat","QUILL_CONFIG_TOKEN","providedIn","factory","modules","QuillService","constructor","injector","config","quill$","_a","_b","Quill","maybePatchedAddEventListener","document","addEventListener","quillImport","default","customOptions","forEach","customOption","newCustomOption","import","whitelist","register","suppressGlobalRegisterWarning","customModules","implementation","path","pipe","bufferSize","refCount","get","getQuill","ɵfac","Injector","ɵprov","type","args","undefined","decorators","QuillEditorBase","elementRef","cd","domSanitizer","platformId","renderer","zone","service","required","customToolbarPosition","styles","strict","preserveWhitespace","trimOnValidation","compareValues","filterNull","defaultEmptyValue","onEditorCreated","onEditorChanged","onContentChanged","onSelectionChanged","onFocus","onBlur","disabled","preserve","toolbarPosition","subscription","quillSubscription","valueGetter","quillEditor","editorElement","html","querySelector","innerHTML","modelValue","getText","getContents","JSON","stringify","e","valueSetter","value","sanitize","includes","HTML","clipboard","convert","parse","insert","selectionChangeHandler","range","oldRange","source","shouldTriggerOnModelTouched","onModelTouched","observers","length","run","emit","editor","markForCheck","textChangeHandler","delta","oldDelta","text","content","editorElem","trackChanges","shouldTriggerOnModelChange","onModelChange","editorChangeHandler","event","current","old","normalizeClassNames","classes","classList","trim","split","reduce","prev","cur","trimmed","push","ngOnInit","ngAfterViewInit","subscribe","nativeElement","toolbarElem","Object","assign","placeholder","keys","key","setStyle","addClasses","bounds","body","debug","readOnly","hasOwnProperty","scrollingContainer","formats","runOutsideAngular","_c","theme","linkPlaceholder","tooltip","input","root","dataset","link","setText","newValue","setContents","getModule","clear","setDisabledState","addQuillEventListeners","onValidatorChanged","requestAnimationFrame","ngOnDestroy","dispose","unsubscribe","ngOnChanges","changes","enable","currentValue","currentStyling","previousStyling","previousValue","removeStyle","currentClasses","previousClasses","removeClasses","c","addClass","removeClass","writeValue","currentEditorValue","isDisabled","disable","setAttribute","removeAttribute","registerOnChange","fn","registerOnTouched","registerOnValidatorChange","validate","err","valid","textLength","deltaOperations","ops","onlyEmptyOperation","minLength","minLengthError","given","maxLength","maxLengthError","requiredError","empty","add","textChange$","editorChange$","ɵdir","QuillEditorComponent","ɵcmp","multi","provide","useExisting","NgIf","encapsulation","None","providers","selector","template","QuillViewHTMLComponent","sanitizer","themeClass","bypassSecurityTrustHtml","NgClass","QuillViewComponent","QuillModule","forRoot","ngModule","useValue","ɵmod","ɵinj","declarations","exports","imports"],"sources":["/Users/mstrofimov/projects/angular-blog/node_modules/ngx-quill/fesm2015/ngx-quill.mjs"],"sourcesContent":["import * as i3 from '@angular/common';\nimport { DOCUMENT, isPlatformServer, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Optional, Inject, EventEmitter, SecurityContext, PLATFORM_ID, Directive, Input, Output, ElementRef, ChangeDetectorRef, Renderer2, NgZone, forwardRef, Component, ViewEncapsulation, NgModule } from '@angular/core';\nimport * as i1 from '@angular/platform-browser';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { defer, Subscription, fromEvent } from 'rxjs';\nimport { shareReplay, debounceTime } from 'rxjs/operators';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\nimport { __awaiter } from 'tslib';\n\nconst defaultModules = {\n    toolbar: [\n        ['bold', 'italic', 'underline', 'strike'],\n        ['blockquote', 'code-block'],\n        [{ header: 1 }, { header: 2 }],\n        [{ list: 'ordered' }, { list: 'bullet' }],\n        [{ script: 'sub' }, { script: 'super' }],\n        [{ indent: '-1' }, { indent: '+1' }],\n        [{ direction: 'rtl' }],\n        [{ size: ['small', false, 'large', 'huge'] }],\n        [{ header: [1, 2, 3, 4, 5, 6, false] }],\n        [\n            { color: [] },\n            { background: [] }\n        ],\n        [{ font: [] }],\n        [{ align: [] }],\n        ['clean'],\n        ['link', 'image', 'video'] // link and image, video\n    ]\n};\n\nconst getFormat = (format, configFormat) => {\n    const passedFormat = format || configFormat;\n    return passedFormat || 'html';\n};\n\nconst QUILL_CONFIG_TOKEN = new InjectionToken('config', {\n    providedIn: 'root',\n    factory: () => ({ modules: defaultModules })\n});\n\nclass QuillService {\n    constructor(injector, config) {\n        this.config = config;\n        this.quill$ = defer(() => __awaiter(this, void 0, void 0, function* () {\n            var _a, _b;\n            if (!this.Quill) {\n                // Quill adds events listeners on import https://github.com/quilljs/quill/blob/develop/core/emitter.js#L8\n                // We'd want to use the unpatched `addEventListener` method to have all event callbacks to be run outside of zone.\n                // We don't know yet if the `zone.js` is used or not, just save the value to restore it back further.\n                const maybePatchedAddEventListener = this.document.addEventListener;\n                // There're 2 types of Angular applications:\n                // 1) zone-full (by default)\n                // 2) zone-less\n                // The developer can avoid importing the `zone.js` package and tells Angular that he/she is responsible for running\n                // the change detection by himself. This is done by \"nooping\" the zone through `CompilerOptions` when bootstrapping\n                // the root module. We fallback to `document.addEventListener` if `__zone_symbol__addEventListener` is not defined,\n                // this means the `zone.js` is not imported.\n                // The `__zone_symbol__addEventListener` is basically a native DOM API, which is not patched by zone.js, thus not even going\n                // through the `zone.js` task lifecycle. You can also access the native DOM API as follows `target[Zone.__symbol__('methodName')]`.\n                // eslint-disable-next-line @typescript-eslint/dot-notation\n                this.document.addEventListener = this.document['__zone_symbol__addEventListener'] || this.document.addEventListener;\n                const quillImport = yield import('quill');\n                this.document.addEventListener = maybePatchedAddEventListener;\n                this.Quill = (quillImport.default ? quillImport.default : quillImport);\n            }\n            // Only register custom options and modules once\n            (_a = this.config.customOptions) === null || _a === void 0 ? void 0 : _a.forEach((customOption) => {\n                const newCustomOption = this.Quill.import(customOption.import);\n                newCustomOption.whitelist = customOption.whitelist;\n                this.Quill.register(newCustomOption, true, this.config.suppressGlobalRegisterWarning);\n            });\n            (_b = this.config.customModules) === null || _b === void 0 ? void 0 : _b.forEach(({ implementation, path }) => {\n                this.Quill.register(path, implementation, this.config.suppressGlobalRegisterWarning);\n            });\n            return this.Quill;\n        })).pipe(shareReplay({ bufferSize: 1, refCount: true }));\n        this.document = injector.get(DOCUMENT);\n        if (!this.config) {\n            this.config = { modules: defaultModules };\n        }\n    }\n    getQuill() {\n        return this.quill$;\n    }\n}\nQuillService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.3\", ngImport: i0, type: QuillService, deps: [{ token: i0.Injector }, { token: QUILL_CONFIG_TOKEN, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nQuillService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.3\", ngImport: i0, type: QuillService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.3\", ngImport: i0, type: QuillService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.Injector }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [QUILL_CONFIG_TOKEN]\n                    }] }];\n    } });\n\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nclass QuillEditorBase {\n    constructor(injector, elementRef, cd, domSanitizer, platformId, renderer, zone, service) {\n        this.elementRef = elementRef;\n        this.cd = cd;\n        this.domSanitizer = domSanitizer;\n        this.platformId = platformId;\n        this.renderer = renderer;\n        this.zone = zone;\n        this.service = service;\n        this.required = false;\n        this.customToolbarPosition = 'top';\n        this.styles = null;\n        this.strict = true;\n        this.customOptions = [];\n        this.customModules = [];\n        this.preserveWhitespace = false;\n        this.trimOnValidation = false;\n        this.compareValues = false;\n        this.filterNull = false;\n        /*\n        https://github.com/KillerCodeMonkey/ngx-quill/issues/1257 - fix null value set\n      \n        provide default empty value\n        by default null\n      \n        e.g. defaultEmptyValue=\"\" - empty string\n      \n        <quill-editor\n          defaultEmptyValue=\"\"\n          formControlName=\"message\"\n        ></quill-editor>\n        */\n        this.defaultEmptyValue = null;\n        this.onEditorCreated = new EventEmitter();\n        this.onEditorChanged = new EventEmitter();\n        this.onContentChanged = new EventEmitter();\n        this.onSelectionChanged = new EventEmitter();\n        this.onFocus = new EventEmitter();\n        this.onBlur = new EventEmitter();\n        this.disabled = false; // used to store initial value before ViewInit\n        this.preserve = false;\n        this.toolbarPosition = 'top';\n        this.subscription = null;\n        this.quillSubscription = null;\n        this.valueGetter = (quillEditor, editorElement) => {\n            let html = editorElement.querySelector('.ql-editor').innerHTML;\n            if (html === '<p><br></p>' || html === '<div><br></div>') {\n                html = this.defaultEmptyValue;\n            }\n            let modelValue = html;\n            const format = getFormat(this.format, this.service.config.format);\n            if (format === 'text') {\n                modelValue = quillEditor.getText();\n            }\n            else if (format === 'object') {\n                modelValue = quillEditor.getContents();\n            }\n            else if (format === 'json') {\n                try {\n                    modelValue = JSON.stringify(quillEditor.getContents());\n                }\n                catch (e) {\n                    modelValue = quillEditor.getText();\n                }\n            }\n            return modelValue;\n        };\n        this.valueSetter = (quillEditor, value) => {\n            const format = getFormat(this.format, this.service.config.format);\n            if (format === 'html') {\n                const sanitize = [true, false].includes(this.sanitize) ? this.sanitize : (this.service.config.sanitize || false);\n                if (sanitize) {\n                    value = this.domSanitizer.sanitize(SecurityContext.HTML, value);\n                }\n                return quillEditor.clipboard.convert(value);\n            }\n            else if (format === 'json') {\n                try {\n                    return JSON.parse(value);\n                }\n                catch (e) {\n                    return [{ insert: value }];\n                }\n            }\n            return value;\n        };\n        this.selectionChangeHandler = (range, oldRange, source) => {\n            const shouldTriggerOnModelTouched = !range && !!this.onModelTouched;\n            // only emit changes when there's any listener\n            if (!this.onBlur.observers.length &&\n                !this.onFocus.observers.length &&\n                !this.onSelectionChanged.observers.length &&\n                !shouldTriggerOnModelTouched) {\n                return;\n            }\n            this.zone.run(() => {\n                if (range === null) {\n                    this.onBlur.emit({\n                        editor: this.quillEditor,\n                        source\n                    });\n                }\n                else if (oldRange === null) {\n                    this.onFocus.emit({\n                        editor: this.quillEditor,\n                        source\n                    });\n                }\n                this.onSelectionChanged.emit({\n                    editor: this.quillEditor,\n                    oldRange,\n                    range,\n                    source\n                });\n                if (shouldTriggerOnModelTouched) {\n                    this.onModelTouched();\n                }\n                this.cd.markForCheck();\n            });\n        };\n        this.textChangeHandler = (delta, oldDelta, source) => {\n            // only emit changes emitted by user interactions\n            const text = this.quillEditor.getText();\n            const content = this.quillEditor.getContents();\n            let html = this.editorElem.querySelector('.ql-editor').innerHTML;\n            if (html === '<p><br></p>' || html === '<div><br></div>') {\n                html = this.defaultEmptyValue;\n            }\n            const trackChanges = this.trackChanges || this.service.config.trackChanges;\n            const shouldTriggerOnModelChange = (source === 'user' || trackChanges && trackChanges === 'all') && !!this.onModelChange;\n            // only emit changes when there's any listener\n            if (!this.onContentChanged.observers.length && !shouldTriggerOnModelChange) {\n                return;\n            }\n            this.zone.run(() => {\n                if (shouldTriggerOnModelChange) {\n                    this.onModelChange(this.valueGetter(this.quillEditor, this.editorElem));\n                }\n                this.onContentChanged.emit({\n                    content,\n                    delta,\n                    editor: this.quillEditor,\n                    html,\n                    oldDelta,\n                    source,\n                    text\n                });\n                this.cd.markForCheck();\n            });\n        };\n        // eslint-disable-next-line max-len\n        this.editorChangeHandler = (event, current, old, source) => {\n            // only emit changes when there's any listener\n            if (!this.onEditorChanged.observers.length) {\n                return;\n            }\n            // only emit changes emitted by user interactions\n            if (event === 'text-change') {\n                const text = this.quillEditor.getText();\n                const content = this.quillEditor.getContents();\n                let html = this.editorElem.querySelector('.ql-editor').innerHTML;\n                if (html === '<p><br></p>' || html === '<div><br></div>') {\n                    html = this.defaultEmptyValue;\n                }\n                this.zone.run(() => {\n                    this.onEditorChanged.emit({\n                        content,\n                        delta: current,\n                        editor: this.quillEditor,\n                        event,\n                        html,\n                        oldDelta: old,\n                        source,\n                        text\n                    });\n                    this.cd.markForCheck();\n                });\n            }\n            else {\n                this.zone.run(() => {\n                    this.onEditorChanged.emit({\n                        editor: this.quillEditor,\n                        event,\n                        oldRange: old,\n                        range: current,\n                        source\n                    });\n                    this.cd.markForCheck();\n                });\n            }\n        };\n        this.document = injector.get(DOCUMENT);\n    }\n    static normalizeClassNames(classes) {\n        const classList = classes.trim().split(' ');\n        return classList.reduce((prev, cur) => {\n            const trimmed = cur.trim();\n            if (trimmed) {\n                prev.push(trimmed);\n            }\n            return prev;\n        }, []);\n    }\n    ngOnInit() {\n        this.preserve = this.preserveWhitespace;\n        this.toolbarPosition = this.customToolbarPosition;\n    }\n    ngAfterViewInit() {\n        if (isPlatformServer(this.platformId)) {\n            return;\n        }\n        // The `quill-editor` component might be destroyed before the `quill` chunk is loaded and its code is executed\n        // this will lead to runtime exceptions, since the code will be executed on DOM nodes that don't exist within the tree.\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        this.quillSubscription = this.service.getQuill().subscribe(Quill => {\n            this.editorElem = this.elementRef.nativeElement.querySelector('[quill-editor-element]');\n            const toolbarElem = this.elementRef.nativeElement.querySelector('[quill-editor-toolbar]');\n            const modules = Object.assign({}, this.modules || this.service.config.modules);\n            if (toolbarElem) {\n                modules.toolbar = toolbarElem;\n            }\n            else if (modules.toolbar === undefined) {\n                modules.toolbar = defaultModules.toolbar;\n            }\n            let placeholder = this.placeholder !== undefined ? this.placeholder : this.service.config.placeholder;\n            if (placeholder === undefined) {\n                placeholder = 'Insert text here ...';\n            }\n            if (this.styles) {\n                Object.keys(this.styles).forEach((key) => {\n                    this.renderer.setStyle(this.editorElem, key, this.styles[key]);\n                });\n            }\n            if (this.classes) {\n                this.addClasses(this.classes);\n            }\n            this.customOptions.forEach((customOption) => {\n                const newCustomOption = Quill.import(customOption.import);\n                newCustomOption.whitelist = customOption.whitelist;\n                Quill.register(newCustomOption, true);\n            });\n            this.customModules.forEach(({ implementation, path }) => {\n                Quill.register(path, implementation);\n            });\n            let bounds = this.bounds && this.bounds === 'self' ? this.editorElem : this.bounds;\n            if (!bounds) {\n                bounds = this.service.config.bounds ? this.service.config.bounds : this.document.body;\n            }\n            let debug = this.debug;\n            if (!debug && debug !== false && this.service.config.debug) {\n                debug = this.service.config.debug;\n            }\n            let readOnly = this.readOnly;\n            if (!readOnly && this.readOnly !== false) {\n                readOnly = this.service.config.readOnly !== undefined ? this.service.config.readOnly : false;\n            }\n            let defaultEmptyValue = this.defaultEmptyValue;\n            if (this.service.config.hasOwnProperty('defaultEmptyValue')) {\n                defaultEmptyValue = this.service.config.defaultEmptyValue;\n            }\n            let scrollingContainer = this.scrollingContainer;\n            if (!scrollingContainer && this.scrollingContainer !== null) {\n                scrollingContainer =\n                    this.service.config.scrollingContainer === null\n                        || this.service.config.scrollingContainer ? this.service.config.scrollingContainer : null;\n            }\n            let formats = this.formats;\n            if (!formats && formats === undefined) {\n                formats = this.service.config.formats ? [...this.service.config.formats] : (this.service.config.formats === null ? null : undefined);\n            }\n            this.zone.runOutsideAngular(() => {\n                var _a, _b, _c;\n                this.quillEditor = new Quill(this.editorElem, {\n                    bounds,\n                    debug: debug,\n                    formats: formats,\n                    modules,\n                    placeholder,\n                    readOnly,\n                    defaultEmptyValue,\n                    scrollingContainer: scrollingContainer,\n                    strict: this.strict,\n                    theme: this.theme || (this.service.config.theme ? this.service.config.theme : 'snow')\n                });\n                // Set optional link placeholder, Quill has no native API for it so using workaround\n                if (this.linkPlaceholder) {\n                    const tooltip = (_b = (_a = this.quillEditor) === null || _a === void 0 ? void 0 : _a.theme) === null || _b === void 0 ? void 0 : _b.tooltip;\n                    const input = (_c = tooltip === null || tooltip === void 0 ? void 0 : tooltip.root) === null || _c === void 0 ? void 0 : _c.querySelector('input[data-link]');\n                    if (input === null || input === void 0 ? void 0 : input.dataset) {\n                        input.dataset.link = this.linkPlaceholder;\n                    }\n                }\n            });\n            if (this.content) {\n                const format = getFormat(this.format, this.service.config.format);\n                if (format === 'text') {\n                    this.quillEditor.setText(this.content, 'silent');\n                }\n                else {\n                    const newValue = this.valueSetter(this.quillEditor, this.content);\n                    this.quillEditor.setContents(newValue, 'silent');\n                }\n                this.quillEditor.getModule('history').clear();\n            }\n            // initialize disabled status based on this.disabled as default value\n            this.setDisabledState();\n            this.addQuillEventListeners();\n            // The `requestAnimationFrame` triggers change detection. There's no sense to invoke the `requestAnimationFrame` if anyone is\n            // listening to the `onEditorCreated` event inside the template, for instance `<quill-view (onEditorCreated)=\"...\">`.\n            if (!this.onEditorCreated.observers.length && !this.onValidatorChanged) {\n                return;\n            }\n            // The `requestAnimationFrame` will trigger change detection and `onEditorCreated` will also call `markDirty()`\n            // internally, since Angular wraps template event listeners into `listener` instruction. We're using the `requestAnimationFrame`\n            // to prevent the frame drop and avoid `ExpressionChangedAfterItHasBeenCheckedError` error.\n            requestAnimationFrame(() => {\n                if (this.onValidatorChanged) {\n                    this.onValidatorChanged();\n                }\n                this.onEditorCreated.emit(this.quillEditor);\n            });\n        });\n    }\n    ngOnDestroy() {\n        var _a;\n        this.dispose();\n        (_a = this.quillSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n        this.quillSubscription = null;\n    }\n    ngOnChanges(changes) {\n        if (!this.quillEditor) {\n            return;\n        }\n        /* eslint-disable @typescript-eslint/dot-notation */\n        if (changes.readOnly) {\n            this.quillEditor.enable(!changes.readOnly.currentValue);\n        }\n        if (changes.placeholder) {\n            this.quillEditor.root.dataset.placeholder =\n                changes.placeholder.currentValue;\n        }\n        if (changes.defaultEmptyValue) {\n            this.quillEditor.root.dataset.defaultEmptyValue =\n                changes.defaultEmptyValue.currentValue;\n        }\n        if (changes.styles) {\n            const currentStyling = changes.styles.currentValue;\n            const previousStyling = changes.styles.previousValue;\n            if (previousStyling) {\n                Object.keys(previousStyling).forEach((key) => {\n                    this.renderer.removeStyle(this.editorElem, key);\n                });\n            }\n            if (currentStyling) {\n                Object.keys(currentStyling).forEach((key) => {\n                    this.renderer.setStyle(this.editorElem, key, this.styles[key]);\n                });\n            }\n        }\n        if (changes.classes) {\n            const currentClasses = changes.classes.currentValue;\n            const previousClasses = changes.classes.previousValue;\n            if (previousClasses) {\n                this.removeClasses(previousClasses);\n            }\n            if (currentClasses) {\n                this.addClasses(currentClasses);\n            }\n        }\n        // We'd want to re-apply event listeners if the `debounceTime` binding changes to apply the\n        // `debounceTime` operator or vice-versa remove it.\n        if (changes.debounceTime) {\n            this.addQuillEventListeners();\n        }\n        /* eslint-enable @typescript-eslint/dot-notation */\n    }\n    addClasses(classList) {\n        QuillEditorBase.normalizeClassNames(classList).forEach((c) => {\n            this.renderer.addClass(this.editorElem, c);\n        });\n    }\n    removeClasses(classList) {\n        QuillEditorBase.normalizeClassNames(classList).forEach((c) => {\n            this.renderer.removeClass(this.editorElem, c);\n        });\n    }\n    writeValue(currentValue) {\n        // optional fix for https://github.com/angular/angular/issues/14988\n        if (this.filterNull && currentValue === null) {\n            return;\n        }\n        this.content = currentValue;\n        if (!this.quillEditor) {\n            return;\n        }\n        const format = getFormat(this.format, this.service.config.format);\n        const newValue = this.valueSetter(this.quillEditor, currentValue);\n        if (this.compareValues) {\n            const currentEditorValue = this.quillEditor.getContents();\n            if (JSON.stringify(currentEditorValue) === JSON.stringify(newValue)) {\n                return;\n            }\n        }\n        if (currentValue) {\n            if (format === 'text') {\n                this.quillEditor.setText(currentValue);\n            }\n            else {\n                this.quillEditor.setContents(newValue);\n            }\n            return;\n        }\n        this.quillEditor.setText('');\n    }\n    setDisabledState(isDisabled = this.disabled) {\n        // store initial value to set appropriate disabled status after ViewInit\n        this.disabled = isDisabled;\n        if (this.quillEditor) {\n            if (isDisabled) {\n                this.quillEditor.disable();\n                this.renderer.setAttribute(this.elementRef.nativeElement, 'disabled', 'disabled');\n            }\n            else {\n                if (!this.readOnly) {\n                    this.quillEditor.enable();\n                }\n                this.renderer.removeAttribute(this.elementRef.nativeElement, 'disabled');\n            }\n        }\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    registerOnValidatorChange(fn) {\n        this.onValidatorChanged = fn;\n    }\n    validate() {\n        if (!this.quillEditor) {\n            return null;\n        }\n        const err = {};\n        let valid = true;\n        const text = this.quillEditor.getText();\n        // trim text if wanted + handle special case that an empty editor contains a new line\n        const textLength = this.trimOnValidation ? text.trim().length : (text.length === 1 && text.trim().length === 0 ? 0 : text.length - 1);\n        const deltaOperations = this.quillEditor.getContents().ops;\n        const onlyEmptyOperation = deltaOperations && deltaOperations.length === 1 && ['\\n', ''].includes(deltaOperations[0].insert);\n        if (this.minLength && textLength && textLength < this.minLength) {\n            err.minLengthError = {\n                given: textLength,\n                minLength: this.minLength\n            };\n            valid = false;\n        }\n        if (this.maxLength && textLength > this.maxLength) {\n            err.maxLengthError = {\n                given: textLength,\n                maxLength: this.maxLength\n            };\n            valid = false;\n        }\n        if (this.required && !textLength && onlyEmptyOperation) {\n            err.requiredError = {\n                empty: true\n            };\n            valid = false;\n        }\n        return valid ? null : err;\n    }\n    addQuillEventListeners() {\n        this.dispose();\n        // We have to enter the `<root>` zone when adding event listeners, so `debounceTime` will spawn the\n        // `AsyncAction` there w/o triggering change detections. We still re-enter the Angular's zone through\n        // `zone.run` when we emit an event to the parent component.\n        this.zone.runOutsideAngular(() => {\n            this.subscription = new Subscription();\n            this.subscription.add(\n            // mark model as touched if editor lost focus\n            fromEvent(this.quillEditor, 'selection-change').subscribe(([range, oldRange, source]) => {\n                this.selectionChangeHandler(range, oldRange, source);\n            }));\n            // The `fromEvent` supports passing JQuery-style event targets, the editor has `on` and `off` methods which\n            // will be invoked upon subscription and teardown.\n            let textChange$ = fromEvent(this.quillEditor, 'text-change');\n            let editorChange$ = fromEvent(this.quillEditor, 'editor-change');\n            if (typeof this.debounceTime === 'number') {\n                textChange$ = textChange$.pipe(debounceTime(this.debounceTime));\n                editorChange$ = editorChange$.pipe(debounceTime(this.debounceTime));\n            }\n            this.subscription.add(\n            // update model if text changes\n            textChange$.subscribe(([delta, oldDelta, source]) => {\n                this.textChangeHandler(delta, oldDelta, source);\n            }));\n            this.subscription.add(\n            // triggered if selection or text changed\n            editorChange$.subscribe(([event, current, old, source]) => {\n                this.editorChangeHandler(event, current, old, source);\n            }));\n        });\n    }\n    dispose() {\n        if (this.subscription !== null) {\n            this.subscription.unsubscribe();\n            this.subscription = null;\n        }\n    }\n}\nQuillEditorBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.3\", ngImport: i0, type: QuillEditorBase, deps: [{ token: i0.Injector }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.DomSanitizer }, { token: PLATFORM_ID }, { token: i0.Renderer2 }, { token: i0.NgZone }, { token: QuillService }], target: i0.ɵɵFactoryTarget.Directive });\nQuillEditorBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.3\", type: QuillEditorBase, inputs: { format: \"format\", theme: \"theme\", modules: \"modules\", debug: \"debug\", readOnly: \"readOnly\", placeholder: \"placeholder\", maxLength: \"maxLength\", minLength: \"minLength\", required: \"required\", formats: \"formats\", customToolbarPosition: \"customToolbarPosition\", sanitize: \"sanitize\", styles: \"styles\", strict: \"strict\", scrollingContainer: \"scrollingContainer\", bounds: \"bounds\", customOptions: \"customOptions\", customModules: \"customModules\", trackChanges: \"trackChanges\", preserveWhitespace: \"preserveWhitespace\", classes: \"classes\", trimOnValidation: \"trimOnValidation\", linkPlaceholder: \"linkPlaceholder\", compareValues: \"compareValues\", filterNull: \"filterNull\", debounceTime: \"debounceTime\", defaultEmptyValue: \"defaultEmptyValue\", valueGetter: \"valueGetter\", valueSetter: \"valueSetter\" }, outputs: { onEditorCreated: \"onEditorCreated\", onEditorChanged: \"onEditorChanged\", onContentChanged: \"onContentChanged\", onSelectionChanged: \"onSelectionChanged\", onFocus: \"onFocus\", onBlur: \"onBlur\" }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.3\", ngImport: i0, type: QuillEditorBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i0.Injector }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.DomSanitizer }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [PLATFORM_ID]\n                    }] }, { type: i0.Renderer2 }, { type: i0.NgZone }, { type: QuillService }];\n    }, propDecorators: { format: [{\n                type: Input\n            }], theme: [{\n                type: Input\n            }], modules: [{\n                type: Input\n            }], debug: [{\n                type: Input\n            }], readOnly: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], maxLength: [{\n                type: Input\n            }], minLength: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], formats: [{\n                type: Input\n            }], customToolbarPosition: [{\n                type: Input\n            }], sanitize: [{\n                type: Input\n            }], styles: [{\n                type: Input\n            }], strict: [{\n                type: Input\n            }], scrollingContainer: [{\n                type: Input\n            }], bounds: [{\n                type: Input\n            }], customOptions: [{\n                type: Input\n            }], customModules: [{\n                type: Input\n            }], trackChanges: [{\n                type: Input\n            }], preserveWhitespace: [{\n                type: Input\n            }], classes: [{\n                type: Input\n            }], trimOnValidation: [{\n                type: Input\n            }], linkPlaceholder: [{\n                type: Input\n            }], compareValues: [{\n                type: Input\n            }], filterNull: [{\n                type: Input\n            }], debounceTime: [{\n                type: Input\n            }], defaultEmptyValue: [{\n                type: Input\n            }], onEditorCreated: [{\n                type: Output\n            }], onEditorChanged: [{\n                type: Output\n            }], onContentChanged: [{\n                type: Output\n            }], onSelectionChanged: [{\n                type: Output\n            }], onFocus: [{\n                type: Output\n            }], onBlur: [{\n                type: Output\n            }], valueGetter: [{\n                type: Input\n            }], valueSetter: [{\n                type: Input\n            }] } });\nclass QuillEditorComponent extends QuillEditorBase {\n    constructor(injector, elementRef, cd, domSanitizer, platformId, renderer, zone, service) {\n        super(injector, elementRef, cd, domSanitizer, platformId, renderer, zone, service);\n    }\n}\nQuillEditorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.3\", ngImport: i0, type: QuillEditorComponent, deps: [{ token: i0.Injector }, { token: ElementRef }, { token: ChangeDetectorRef }, { token: DomSanitizer }, { token: PLATFORM_ID }, { token: Renderer2 }, { token: NgZone }, { token: QuillService }], target: i0.ɵɵFactoryTarget.Component });\nQuillEditorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.3\", type: QuillEditorComponent, selector: \"quill-editor\", providers: [\n        {\n            multi: true,\n            provide: NG_VALUE_ACCESSOR,\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            useExisting: forwardRef(() => QuillEditorComponent)\n        },\n        {\n            multi: true,\n            provide: NG_VALIDATORS,\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            useExisting: forwardRef(() => QuillEditorComponent)\n        }\n    ], usesInheritance: true, ngImport: i0, template: `\n  <ng-container *ngIf=\"toolbarPosition !== 'top'\">\n    <div quill-editor-element *ngIf=\"!preserve\"></div>\n    <pre quill-editor-element *ngIf=\"preserve\"></pre>\n  </ng-container>\n  <ng-content select=\"[quill-editor-toolbar]\"></ng-content>\n  <ng-container *ngIf=\"toolbarPosition === 'top'\">\n    <div quill-editor-element *ngIf=\"!preserve\"></div>\n    <pre quill-editor-element *ngIf=\"preserve\"></pre>\n  </ng-container>\n`, isInline: true, styles: [\":host{display:inline-block}\\n\"], directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.3\", ngImport: i0, type: QuillEditorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    encapsulation: ViewEncapsulation.None,\n                    providers: [\n                        {\n                            multi: true,\n                            provide: NG_VALUE_ACCESSOR,\n                            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                            useExisting: forwardRef(() => QuillEditorComponent)\n                        },\n                        {\n                            multi: true,\n                            provide: NG_VALIDATORS,\n                            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                            useExisting: forwardRef(() => QuillEditorComponent)\n                        }\n                    ],\n                    selector: 'quill-editor',\n                    template: `\n  <ng-container *ngIf=\"toolbarPosition !== 'top'\">\n    <div quill-editor-element *ngIf=\"!preserve\"></div>\n    <pre quill-editor-element *ngIf=\"preserve\"></pre>\n  </ng-container>\n  <ng-content select=\"[quill-editor-toolbar]\"></ng-content>\n  <ng-container *ngIf=\"toolbarPosition === 'top'\">\n    <div quill-editor-element *ngIf=\"!preserve\"></div>\n    <pre quill-editor-element *ngIf=\"preserve\"></pre>\n  </ng-container>\n`,\n                    styles: [\n                        `\n    :host {\n      display: inline-block;\n    }\n    `\n                    ]\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.Injector }, { type: i0.ElementRef, decorators: [{\n                        type: Inject,\n                        args: [ElementRef]\n                    }] }, { type: i0.ChangeDetectorRef, decorators: [{\n                        type: Inject,\n                        args: [ChangeDetectorRef]\n                    }] }, { type: i1.DomSanitizer, decorators: [{\n                        type: Inject,\n                        args: [DomSanitizer]\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [PLATFORM_ID]\n                    }] }, { type: i0.Renderer2, decorators: [{\n                        type: Inject,\n                        args: [Renderer2]\n                    }] }, { type: i0.NgZone, decorators: [{\n                        type: Inject,\n                        args: [NgZone]\n                    }] }, { type: QuillService, decorators: [{\n                        type: Inject,\n                        args: [QuillService]\n                    }] }];\n    } });\n\nclass QuillViewHTMLComponent {\n    constructor(sanitizer, service) {\n        this.sanitizer = sanitizer;\n        this.service = service;\n        this.content = '';\n        this.innerHTML = '';\n        this.themeClass = 'ql-snow';\n    }\n    ngOnChanges(changes) {\n        if (changes.theme) {\n            const theme = changes.theme.currentValue || (this.service.config.theme ? this.service.config.theme : 'snow');\n            this.themeClass = `ql-${theme} ngx-quill-view-html`;\n        }\n        else if (!this.theme) {\n            const theme = this.service.config.theme ? this.service.config.theme : 'snow';\n            this.themeClass = `ql-${theme} ngx-quill-view-html`;\n        }\n        if (changes.content) {\n            const content = changes.content.currentValue;\n            const sanitize = [true, false].includes(this.sanitize) ? this.sanitize : (this.service.config.sanitize || false);\n            this.innerHTML = sanitize ? content : this.sanitizer.bypassSecurityTrustHtml(content);\n        }\n    }\n}\nQuillViewHTMLComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.3\", ngImport: i0, type: QuillViewHTMLComponent, deps: [{ token: DomSanitizer }, { token: QuillService }], target: i0.ɵɵFactoryTarget.Component });\nQuillViewHTMLComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.3\", type: QuillViewHTMLComponent, selector: \"quill-view-html\", inputs: { content: \"content\", theme: \"theme\", sanitize: \"sanitize\" }, usesOnChanges: true, ngImport: i0, template: `\n  <div class=\"ql-container\" [ngClass]=\"themeClass\">\n    <div class=\"ql-editor\" [innerHTML]=\"innerHTML\">\n    </div>\n  </div>\n`, isInline: true, styles: [\".ql-container.ngx-quill-view-html{border:0}\\n\"], directives: [{ type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.3\", ngImport: i0, type: QuillViewHTMLComponent, decorators: [{\n            type: Component,\n            args: [{\n                    encapsulation: ViewEncapsulation.None,\n                    selector: 'quill-view-html',\n                    styles: [`\n.ql-container.ngx-quill-view-html {\n  border: 0;\n}\n`],\n                    template: `\n  <div class=\"ql-container\" [ngClass]=\"themeClass\">\n    <div class=\"ql-editor\" [innerHTML]=\"innerHTML\">\n    </div>\n  </div>\n`\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i1.DomSanitizer, decorators: [{\n                        type: Inject,\n                        args: [DomSanitizer]\n                    }] }, { type: QuillService }];\n    }, propDecorators: { content: [{\n                type: Input\n            }], theme: [{\n                type: Input\n            }], sanitize: [{\n                type: Input\n            }] } });\n\nclass QuillViewComponent {\n    constructor(elementRef, renderer, zone, service, domSanitizer, platformId) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this.zone = zone;\n        this.service = service;\n        this.domSanitizer = domSanitizer;\n        this.platformId = platformId;\n        this.strict = true;\n        this.customModules = [];\n        this.customOptions = [];\n        this.preserveWhitespace = false;\n        this.onEditorCreated = new EventEmitter();\n        this.preserve = false;\n        this.quillSubscription = null;\n        this.valueSetter = (quillEditor, value) => {\n            const format = getFormat(this.format, this.service.config.format);\n            let content = value;\n            if (format === 'text') {\n                quillEditor.setText(content);\n            }\n            else {\n                if (format === 'html') {\n                    const sanitize = [true, false].includes(this.sanitize) ? this.sanitize : (this.service.config.sanitize || false);\n                    if (sanitize) {\n                        value = this.domSanitizer.sanitize(SecurityContext.HTML, value);\n                    }\n                    content = quillEditor.clipboard.convert(value);\n                }\n                else if (format === 'json') {\n                    try {\n                        content = JSON.parse(value);\n                    }\n                    catch (e) {\n                        content = [{ insert: value }];\n                    }\n                }\n                quillEditor.setContents(content);\n            }\n        };\n    }\n    ngOnInit() {\n        this.preserve = this.preserveWhitespace;\n    }\n    ngOnChanges(changes) {\n        if (!this.quillEditor) {\n            return;\n        }\n        if (changes.content) {\n            this.valueSetter(this.quillEditor, changes.content.currentValue);\n        }\n    }\n    ngAfterViewInit() {\n        if (isPlatformServer(this.platformId)) {\n            return;\n        }\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        this.quillSubscription = this.service.getQuill().subscribe(Quill => {\n            const modules = Object.assign({}, this.modules || this.service.config.modules);\n            modules.toolbar = false;\n            this.customOptions.forEach((customOption) => {\n                const newCustomOption = Quill.import(customOption.import);\n                newCustomOption.whitelist = customOption.whitelist;\n                Quill.register(newCustomOption, true);\n            });\n            this.customModules.forEach(({ implementation, path }) => {\n                Quill.register(path, implementation);\n            });\n            let debug = this.debug;\n            if (!debug && debug !== false && this.service.config.debug) {\n                debug = this.service.config.debug;\n            }\n            let formats = this.formats;\n            if (!formats && formats === undefined) {\n                formats = this.service.config.formats ?\n                    Object.assign({}, this.service.config.formats) : (this.service.config.formats === null ? null : undefined);\n            }\n            const theme = this.theme || (this.service.config.theme ? this.service.config.theme : 'snow');\n            this.editorElem = this.elementRef.nativeElement.querySelector('[quill-view-element]');\n            this.zone.runOutsideAngular(() => {\n                this.quillEditor = new Quill(this.editorElem, {\n                    debug: debug,\n                    formats: formats,\n                    modules,\n                    readOnly: true,\n                    strict: this.strict,\n                    theme\n                });\n            });\n            this.renderer.addClass(this.editorElem, 'ngx-quill-view');\n            if (this.content) {\n                this.valueSetter(this.quillEditor, this.content);\n            }\n            // The `requestAnimationFrame` triggers change detection. There's no sense to invoke the `requestAnimationFrame` if anyone is\n            // listening to the `onEditorCreated` event inside the template, for instance `<quill-view (onEditorCreated)=\"...\">`.\n            if (!this.onEditorCreated.observers.length) {\n                return;\n            }\n            // The `requestAnimationFrame` will trigger change detection and `onEditorCreated` will also call `markDirty()`\n            // internally, since Angular wraps template event listeners into `listener` instruction. We're using the `requestAnimationFrame`\n            // to prevent the frame drop and avoid `ExpressionChangedAfterItHasBeenCheckedError` error.\n            requestAnimationFrame(() => {\n                this.onEditorCreated.emit(this.quillEditor);\n            });\n        });\n    }\n    ngOnDestroy() {\n        var _a;\n        (_a = this.quillSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n        this.quillSubscription = null;\n    }\n}\nQuillViewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.3\", ngImport: i0, type: QuillViewComponent, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i0.NgZone }, { token: QuillService }, { token: i1.DomSanitizer }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nQuillViewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.3\", type: QuillViewComponent, selector: \"quill-view\", inputs: { format: \"format\", theme: \"theme\", modules: \"modules\", debug: \"debug\", formats: \"formats\", sanitize: \"sanitize\", strict: \"strict\", content: \"content\", customModules: \"customModules\", customOptions: \"customOptions\", preserveWhitespace: \"preserveWhitespace\" }, outputs: { onEditorCreated: \"onEditorCreated\" }, usesOnChanges: true, ngImport: i0, template: `\n<div quill-view-element *ngIf=\"!preserve\"></div>\n<pre quill-view-element *ngIf=\"preserve\"></pre>\n`, isInline: true, styles: [\".ql-container.ngx-quill-view{border:0}\\n\"], directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.3\", ngImport: i0, type: QuillViewComponent, decorators: [{\n            type: Component,\n            args: [{\n                    encapsulation: ViewEncapsulation.None,\n                    selector: 'quill-view',\n                    styles: [`\n.ql-container.ngx-quill-view {\n  border: 0;\n}\n`],\n                    template: `\n<div quill-view-element *ngIf=\"!preserve\"></div>\n<pre quill-view-element *ngIf=\"preserve\"></pre>\n`\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.NgZone }, { type: QuillService }, { type: i1.DomSanitizer }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [PLATFORM_ID]\n                    }] }];\n    }, propDecorators: { format: [{\n                type: Input\n            }], theme: [{\n                type: Input\n            }], modules: [{\n                type: Input\n            }], debug: [{\n                type: Input\n            }], formats: [{\n                type: Input\n            }], sanitize: [{\n                type: Input\n            }], strict: [{\n                type: Input\n            }], content: [{\n                type: Input\n            }], customModules: [{\n                type: Input\n            }], customOptions: [{\n                type: Input\n            }], preserveWhitespace: [{\n                type: Input\n            }], onEditorCreated: [{\n                type: Output\n            }] } });\n\nclass QuillModule {\n    static forRoot(config) {\n        return {\n            ngModule: QuillModule,\n            providers: [\n                {\n                    provide: QUILL_CONFIG_TOKEN,\n                    useValue: config\n                }\n            ]\n        };\n    }\n}\nQuillModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.3\", ngImport: i0, type: QuillModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nQuillModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.3\", ngImport: i0, type: QuillModule, declarations: [QuillEditorComponent,\n        QuillViewComponent,\n        QuillViewHTMLComponent], imports: [CommonModule], exports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent] });\nQuillModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.3\", ngImport: i0, type: QuillModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.3\", ngImport: i0, type: QuillModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        QuillEditorComponent,\n                        QuillViewComponent,\n                        QuillViewHTMLComponent\n                    ],\n                    exports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent],\n                    imports: [CommonModule],\n                }]\n        }] });\n\n/*\n * Public API Surface of ngx-quill\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { QUILL_CONFIG_TOKEN, QuillEditorBase, QuillEditorComponent, QuillModule, QuillService, QuillViewComponent, QuillViewHTMLComponent, defaultModules };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}