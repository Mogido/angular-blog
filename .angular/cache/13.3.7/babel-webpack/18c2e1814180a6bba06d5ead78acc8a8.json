{"ast":null,"code":"import { environment } from \"../../../environments/environment\";\nimport { map } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let PostsService = /*#__PURE__*/(() => {\n  class PostsService {\n    constructor(http) {\n      this.http = http;\n    }\n\n    create(post) {\n      return this.http.post(`${environment.fbDbUrl}/posts.json`, post).pipe(map(response => {\n        return Object.assign(Object.assign({}, post), {\n          id: response.name,\n          date: new Date(post.date)\n        });\n      }));\n    }\n\n    getAllPosts() {\n      return this.http.get(`${environment.fbDbUrl}/posts.json`).pipe(map(response => {\n        return Object.keys(response).map(key => Object.assign(Object.assign({}, response[key]), {\n          id: key,\n          date: new Date(response[key].date)\n        }));\n      }));\n    }\n\n    GetPostById(id) {\n      return this.http.get(`${environment.fbDbUrl}/posts/${id}.json`).pipe(map(post => {\n        return Object.assign(Object.assign({}, post), {\n          id,\n          date: new Date(post.date)\n        });\n      }));\n    }\n\n    remove(id) {\n      return this.http.delete(`${environment.fbDbUrl}/posts/${id}.json`);\n    }\n\n    update(post) {\n      return this.http.patch(`${environment.fbDbUrl}/posts/${post.id}.json`, post);\n    }\n\n  }\n\n  PostsService.ɵfac = function PostsService_Factory(t) {\n    return new (t || PostsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  PostsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PostsService,\n    factory: PostsService.ɵfac,\n    providedIn: 'root'\n  });\n  return PostsService;\n})();","map":null,"metadata":{},"sourceType":"module"}